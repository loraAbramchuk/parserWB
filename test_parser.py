#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞ Wildberries
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wildberries_parser.settings')
django.setup()

from products.parser import WildberriesParser

def test_parser():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä Wildberries...")
    
    parser = WildberriesParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
    query = "–Ω–æ—É—Ç–±—É–∫"
    limit = 5  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
    
    print(f"üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{query}'")
    print(f"üìä –õ–∏–º–∏—Ç: {limit} —Ç–æ–≤–∞—Ä–æ–≤")
    print("-" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
        products = parser.search_products(query, limit=limit)
        
        if not products:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        parsed_products = []
        for i, product in enumerate(products, 1):
            print(f"üì¶ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä {i}/{len(products)}...")
            
            parsed_product = parser.parse_product(product, query)
            if parsed_product:
                parsed_products.append(parsed_product)
                print(f"  ‚úÖ {parsed_product['name'][:50]}...")
                print(f"     üí∞ –¶–µ–Ω–∞: {parsed_product['price']}‚ÇΩ")
                if parsed_product['discount_price']:
                    print(f"     üéØ –°–∫–∏–¥–∫–∞: {parsed_product['discount_price']}‚ÇΩ")
                if parsed_product['rating']:
                    print(f"     ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {parsed_product['rating']}")
                print(f"     üí¨ –û—Ç–∑—ã–≤—ã: {parsed_product['reviews_count']}")
                print()
        
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(parsed_products)}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if parsed_products:
            saved_count = parser.save_products(parsed_products)
            print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: {saved_count} —Ç–æ–≤–∞—Ä–æ–≤")
        
        print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_parser() 