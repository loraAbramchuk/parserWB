#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ API
"""
import os
import sys
import django
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wildberries_parser.settings')
django.setup()

from products.wb_by_parser import parse_wb_by, save_products_to_db

def test_parser():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä wildberries.by
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä wildberries.by...")
    
    try:
        # –ü–∞—Ä—Å–∏–º –Ω–µ–±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
        query = "–Ω–æ—É—Ç–±—É–∫"
        products = parse_wb_by(query, max_pages=1)
        
        if products:
            print(f"‚úÖ –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞
            if products:
                product = products[0]
                print(f"üì¶ –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞:")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {product['name'][:50]}...")
                print(f"   –¶–µ–Ω–∞: {product['price']} ‚ÇΩ")
                if product['discount_price']:
                    print(f"   –°–∫–∏–¥–∫–∞: {product['discount_price']} ‚ÇΩ")
                if product['rating']:
                    print(f"   –†–µ–π—Ç–∏–Ω–≥: {product['rating']}")
                print(f"   –û—Ç–∑—ã–≤—ã: {product['reviews_count']}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            saved_count = save_products_to_db(products)
            print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: {saved_count} —Ç–æ–≤–∞—Ä–æ–≤")
            
        else:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()

def test_api():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
    """
    print("\nüîå –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints...")
    
    base_url = "http://127.0.0.1:8000"
    
    try:
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API
        response = requests.get(f"{base_url}/api/products/")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {len(data.get('results', data))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        response = requests.get(f"{base_url}/api/products/stats/")
        if response.status_code == 200:
            stats = response.json()
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ API –¥–ª—è Wildberries Parser")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
    test_parser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_api()
    
    print("\n" + "=" * 60)
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://127.0.0.1:8000")
    print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ")
    print("4. –ù–∞–∂–º–∏—Ç–µ '–ü–∞—Ä—Å–∏—Ç—å —Ç–æ–≤–∞—Ä—ã' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    print("5. –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/")
    print("6. API: http://127.0.0.1:8000/api/products/")

if __name__ == "__main__":
    main() 